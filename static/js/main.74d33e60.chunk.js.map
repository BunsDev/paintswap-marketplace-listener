{"version":3,"sources":["lib/marketplaceV2.ts","lib/index.ts","utils/helpers.tsx","components/ChartCard.tsx","components/EventPrinter.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["MarketplaceV2ABI","MarketplaceV2ABIRaw","MarketplaceV2Address","MarketplaceV2Utils","bundle","result","pieces","nfts","length","i","base","marketplaceId","collection","tokenID","tokenIds","amountPerBundleUnit","amountBatches","push","splitBundleBase","map","value","amount","mul","pricePerUnit","priceTotal","splitBundlePriced","buyer","seller","duration","isAuction","isNSFW","this","MarketplaceV2","providerOrSigner","address","contract","ethers","Contract","callback","on","price","marketplaceURI","searchKeywords","routerAddresses","event","failedSellAll","endTime","bidder","bid","nextMinimum","offerrer","offer","onNewListingImpl","splitBundleNewSale","forEach","onSoldImpl","splitBundleSold","onUnsoldImpl","sale","onCancelledImpl","splitBundleUnsold","onPriceUpdateImpl","onDurationExtendedImpl","onNewBidImpl","onNewOfferImpl","a","getSaleDetails","then","details","amountRemaining","complete","devFeePercentage","startTime","maxBidOrOffer","maxBidderOrOfferer","nextMinimumBidOrOffer","short","input","substring","slice","lastFew","getBalanceNumber","decimals","BigNumber","from","div","pow","toNumber","timeConverter","timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","getSeconds","ChartContainer","styled","StyledCard","EmptyInfo","SpanHeader","span","SpanMain","ChartCard","volume","CustomTooltip","active","payload","label","noChartData","ResponsiveContainer","width","height","AreaChart","data","margin","top","right","bottom","left","Area","type","dataKey","stroke","fill","CartesianGrid","strokeDasharray","opacity","XAxis","fontSize","YAxis","Tooltip","content","provider","providers","JsonRpcProvider","mainUrl","marketplace","breakpoints","mediaQueries","xs","sm","md","lg","xl","xxl","Body","ListContainer","FeedContainer","Feed","FeedSection","SectionRow","Divider","EventPrinter","React","useState","listingFeed","setListingFeed","soldFeed","setSoldFeed","unsoldFeed","setUnsoldFeed","priceUpdateFeed","setPriceUpdateFeed","durationExtendedFeed","setDurationExtendedFeed","bidFeed","setBidFeed","offerFeed","setOfferFeed","chartVolumeTotal","setChartVolumeTotal","chartVolume","setChartVolume","useEffect","console","log","onNewListing","item","feed","unshift","onSold","chartFeed","time","now","onUnsold","cancelled","itemExt","Object","assign","onPriceUpdate","onNewBid","onNewOffer","onDurationExtended","extension","index","href","toString","target","toLowerCase","App","className","src","alt","memo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74d33e60.chunk.js","sourcesContent":["import { ethers } from 'ethers'\r\nimport * as V2 from './marketplaceV2Types'\r\nimport MarketplaceV2ABIRaw from '../abi/PaintSwapMarketplaceV2.json'\r\n\r\nexport const MarketplaceV2ABI: ethers.ContractInterface = MarketplaceV2ABIRaw\r\nexport const MarketplaceV2Address = '0x6125fD14b6790d5F66509B7aa53274c93dAE70B9'\r\n\r\nclass MarketplaceV2Utils {\r\n  /** @internal */\r\n  static splitBundleBase(bundle: V2.BundleBase): Array<V2.Base> {\r\n    const result = []\r\n    const pieces = bundle.nfts.length\r\n    // Bundles aren't used at the moment, so this loop will be for a single sale\r\n    for (let i = 0; i < pieces; ++i) {\r\n      const base: V2.Base = {\r\n        marketplaceId: bundle.marketplaceId,\r\n        collection: bundle.nfts[i],\r\n        tokenID: bundle.tokenIds[i],\r\n        amountPerBundleUnit: bundle.amountBatches[i],\r\n      }\r\n      result.push(base)\r\n    }\r\n    return result\r\n  }\r\n\r\n  /** @internal */\r\n  static splitBundlePriced(bundle: V2.BundlePriced): Array<V2.Priced> {\r\n    const base = MarketplaceV2Utils.splitBundleBase(bundle)\r\n    return base.map((value): V2.Priced => {\r\n      return {\r\n        marketplaceId: value.marketplaceId,\r\n        collection: value.collection,\r\n        amountPerBundleUnit: value.amountPerBundleUnit,\r\n        tokenID: value.tokenID,\r\n        amount: bundle.amount.mul(value.amountPerBundleUnit),\r\n        pricePerUnit: bundle.pricePerUnit, // in case of a bundle every NFT will show as the same price, as we simply don't know\r\n        priceTotal: bundle.priceTotal,\r\n      }\r\n    })\r\n  }\r\n\r\n  static splitBundleSold(bundle: V2.BundleSold): Array<V2.Sold> {\r\n    return MarketplaceV2Utils.splitBundlePriced(bundle).map((value): V2.Sold => {\r\n      return {\r\n        marketplaceId: value.marketplaceId,\r\n        collection: value.collection,\r\n        amountPerBundleUnit: value.amountPerBundleUnit,\r\n        tokenID: value.tokenID,\r\n        amount: value.amount,\r\n        pricePerUnit: value.pricePerUnit,\r\n        priceTotal: value.priceTotal,\r\n        buyer: bundle.buyer,\r\n        seller: bundle.seller,\r\n      }\r\n    })\r\n  }\r\n\r\n  static splitBundleNewSale(bundle: V2.NewBundleListing): Array<V2.NewListing> {\r\n    return MarketplaceV2Utils.splitBundlePriced(bundle).map((value): V2.NewListing => {\r\n      return {\r\n        marketplaceId: value.marketplaceId,\r\n        collection: value.collection,\r\n        amountPerBundleUnit: value.amountPerBundleUnit,\r\n        tokenID: value.tokenID,\r\n        amount: value.amount,\r\n        pricePerUnit: value.pricePerUnit,\r\n        priceTotal: value.priceTotal,\r\n        duration: bundle.duration,\r\n        isAuction: bundle.isAuction,\r\n        isNSFW: bundle.isNSFW,\r\n      }\r\n    })\r\n  }\r\n\r\n  static splitBundleUnsold(bundle: V2.BundleUnsold): Array<V2.Unsold> {\r\n    return this.splitBundleBase(bundle)\r\n  }\r\n}\r\n\r\nexport class MarketplaceV2 {\r\n  contract: ethers.Contract\r\n\r\n  constructor(providerOrSigner: ethers.providers.Provider | ethers.Signer, address: string = MarketplaceV2Address) {\r\n    this.contract = new ethers.Contract(address, MarketplaceV2ABI, providerOrSigner)\r\n  }\r\n\r\n  /** @internal */\r\n  onNewListingImpl(callback: (sale: V2.NewBundleListing) => void): void {\r\n    this.contract.on(\r\n      'NewSale',\r\n      (\r\n        marketplaceId,\r\n        nfts,\r\n        tokenIds,\r\n        amountBatches,\r\n        price,\r\n        duration,\r\n        isAuction,\r\n        amount,\r\n        isNSFW,\r\n        marketplaceURI,\r\n        searchKeywords,\r\n        routerAddresses,\r\n        event,\r\n      ) => {\r\n        const bundle: V2.NewBundleListing = {\r\n          marketplaceId,\r\n          nfts,\r\n          tokenIds,\r\n          amountBatches,\r\n          pricePerUnit: price,\r\n          priceTotal: price.mul(amount),\r\n          duration,\r\n          isAuction,\r\n          amount,\r\n          isNSFW,\r\n        }\r\n        callback(bundle)\r\n      },\r\n    )\r\n  }\r\n\r\n  /** @internal */\r\n  onSoldImpl(callback: (bundle: V2.BundleSold) => void): void {\r\n    this.contract.on('Sold', (marketplaceId, nfts, tokenIds, amountBatches, price, buyer, seller, amount, event) => {\r\n      const bundle: V2.BundleSold = {\r\n        marketplaceId,\r\n        nfts,\r\n        tokenIds,\r\n        amountBatches,\r\n        pricePerUnit: price,\r\n        priceTotal: price.mul(amount),\r\n        buyer,\r\n        seller,\r\n        amount,\r\n      }\r\n      callback(bundle)\r\n    })\r\n  }\r\n\r\n  /** @internal */\r\n  onUnsoldImpl(callback: (bundle: V2.BundleUnsold) => void): void {\r\n    this.contract.on('SaleFinished', (marketplaceId, nfts, tokenIds, amountBatches, failedSellAll, event) => {\r\n      if (failedSellAll) {\r\n        const bundle: V2.BundleUnsold = {\r\n          marketplaceId,\r\n          nfts,\r\n          tokenIds,\r\n          amountBatches,\r\n        }\r\n        callback(bundle)\r\n      }\r\n    })\r\n  }\r\n\r\n  /** @internal */\r\n  onCancelledImpl(callback: (bundle: V2.BundleUnsold) => void): void {\r\n    this.contract.on('CancelledSale', (marketplaceId, nfts, tokenIds, amountBatches, event) => {\r\n      const bundle: V2.BundleUnsold = {\r\n        marketplaceId,\r\n        nfts,\r\n        tokenIds,\r\n        amountBatches,\r\n      }\r\n      callback(bundle)\r\n    })\r\n  }\r\n\r\n  /** @internal */\r\n  onPriceUpdateImpl(callback: (bundle: V2.BundlePriceUpdate) => void): void {\r\n    // Not handled as individual pieces due to missing amountBatches information\r\n    this.contract.on('UpdatePrice', (marketplaceId, price, nfts, tokenIds, event) => {\r\n      const bundle: V2.BundlePriceUpdate = {\r\n        marketplaceId,\r\n        price,\r\n      }\r\n      callback(bundle)\r\n    })\r\n  }\r\n\r\n  /** @internal */\r\n  onDurationExtendedImpl(callback: (sale: V2.DurationExtended) => void): void {\r\n    this.contract.on('UpdateEndTime', (marketplaceId, endTime, event) => {\r\n      const extension: V2.DurationExtended = {\r\n        marketplaceId,\r\n        endTime,\r\n      }\r\n      callback(extension)\r\n    })\r\n  }\r\n\r\n  /** @internal */\r\n  onNewBidImpl(callback: (bid: V2.NewBid) => void): void {\r\n    this.contract.on('NewBid', (marketplaceId, bidder, bid, nextMinimum) => {\r\n      const newBid: V2.NewBid = {\r\n        marketplaceId,\r\n        bidder,\r\n        bid,\r\n        nextMinimum,\r\n      }\r\n      callback(newBid)\r\n    })\r\n  }\r\n\r\n  /** @internal */\r\n  onNewOfferImpl(callback: (offer: V2.NewOffer) => void): void {\r\n    this.contract.on('NewOffer', (marketplaceId, offerrer, offer, nextMinimum) => {\r\n      const newOffer: V2.NewOffer = {\r\n        marketplaceId,\r\n        offerrer,\r\n        offer,\r\n        nextMinimum,\r\n      }\r\n      callback(newOffer)\r\n    })\r\n  }\r\n\r\n  onNewListingAsBundle(callback: (sale: V2.NewBundleListing) => void): void {\r\n    this.onNewListingImpl(callback)\r\n  }\r\n\r\n  onNewListing(callback: (sale: V2.NewListing) => void): void {\r\n    this.onNewListingImpl((bundle) => MarketplaceV2Utils.splitBundleNewSale(bundle).forEach(callback))\r\n  }\r\n\r\n  onSoldAsBundle(callback: (sale: V2.BundleSold) => void): void {\r\n    this.onSoldImpl(callback)\r\n  }\r\n\r\n  onSold(callback: (sale: V2.Sold) => void): void {\r\n    this.onSoldImpl((bundle) => MarketplaceV2Utils.splitBundleSold(bundle).forEach(callback))\r\n  }\r\n\r\n  onUnsoldAsBundle(callback: (sale: V2.BundleUnsold, cancelled: boolean) => void): void {\r\n    this.onUnsoldImpl((sale) => callback(sale, false)) // not cancelled\r\n    this.onCancelledImpl((sale) => callback(sale, true)) // cancelled\r\n  }\r\n\r\n  onUnsold(callback: (sale: V2.Unsold, cancelled: boolean) => void): void {\r\n    this.onUnsoldImpl((bundle) => MarketplaceV2Utils.splitBundleUnsold(bundle).forEach((sale) => callback(sale, false))) // not cancelled\r\n    this.onCancelledImpl((bundle) =>\r\n      MarketplaceV2Utils.splitBundleUnsold(bundle).forEach((sale) => callback(sale, true)),\r\n    ) // cancelled\r\n  }\r\n\r\n  onPriceUpdate(callback: (sale: V2.BundlePriceUpdate) => void): void {\r\n    this.onPriceUpdateImpl(callback)\r\n  }\r\n\r\n  onDurationExtended(callback: (extension: V2.DurationExtended) => void): void {\r\n    this.onDurationExtendedImpl(callback)\r\n  }\r\n\r\n  onNewBid(callback: (bid: V2.NewBid) => void): void {\r\n    this.onNewBidImpl(callback)\r\n  }\r\n\r\n  onNewOffer(callback: (offer: V2.NewOffer) => void): void {\r\n    this.onNewOfferImpl(callback)\r\n  }\r\n\r\n  async getSaleDetails(marketplaceId: ethers.BigNumber): Promise<V2.SaleDetails> {\r\n    return this.contract.getSaleDetails(marketplaceId).then(\r\n      (details: any): V2.SaleDetails => ({\r\n        amount: details.amount,\r\n        amountBatches: details.amountBatches,\r\n        amountRemaining: details.amountRemaining,\r\n        complete: details.complete,\r\n        devFeePercentage: details.devFeePercentage,\r\n        startTime: details.startTime,\r\n        endTime: details.endTime,\r\n        isAuction: details.isAuction,\r\n        maxBidOrOffer: details.maxBidOrOffer,\r\n        maxBidderOrOfferer: details.maxBidderOrOfferer,\r\n        nfts: details.nfts,\r\n        tokenIds: details.tokenIds,\r\n        price: details.price,\r\n        seller: details.seller,\r\n      }),\r\n    )\r\n  }\r\n\r\n  async getNextMinimumBidOrOffer(marketplaceId: ethers.BigNumber): Promise<ethers.BigNumber> {\r\n    return this.contract.nextMinimumBidOrOffer(marketplaceId)\r\n  }\r\n}\r\n\r\nexport default MarketplaceV2\r\n","export { default as MarketplaceV2 } from './marketplaceV2'\r\nexport * from './marketplaceV2Types'\r\n","import { ethers } from \"ethers\"\r\n\r\nconst firstFew = (address: string) => {\r\n  return address.substring(0, 6)\r\n}\r\n\r\nconst lastFew = (address: string) => {\r\n  return address.slice(-6)\r\n}\r\n\r\nexport const short = (input: string) => {\r\n  return `${firstFew(input)}...${lastFew(input)}`\r\n}\r\n\r\nexport const getBalanceNumber = (amount: ethers.BigNumber, decimals = 18) => {\r\n  return ethers.BigNumber.from(amount).div((ethers.BigNumber.from(10)).pow(decimals)).toNumber()\r\n}\r\n\r\nexport const timeConverter = (timestamp: number) => {\r\n  const a = new Date(timestamp * 1000)\r\n  const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\r\n  const year = a.getFullYear()\r\n  const month = months[a.getMonth()]\r\n  const date = a.getDate()\r\n  const hour = a.getHours()\r\n  const min = a.getMinutes()\r\n  const sec = a.getSeconds()\r\n  return month + ' ' + date + ' - ' + year + ' | ' + hour + ':' + min\r\n}","/* eslint-disable camelcase */\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts'\r\n\r\nconst ChartContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 16px;\r\n  width: 80%;\r\n  background-color: #131318;\r\n  border-radius: 20px;\r\n  padding: 32px;\r\n  margin-top: 80px;\r\n  position: relative;\r\n`\r\n\r\nconst StyledCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 20px;\r\n  background-color: #161326;\r\n  border: 1px solid #595da1;\r\n  color: #7d8fd1;\r\n  padding: 10px;\r\n`\r\n\r\nconst EmptyInfo = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  z-index: 1000;\r\n  position: absolute;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst SpanHeader = styled.span`\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin-bottom: 8px;\r\n`\r\nconst SpanMain = styled.span`\r\n  font-size: 12px;\r\n  color: #7d8fd1;\r\n`\r\n\r\ninterface Props {\r\n  volume: any\r\n}\r\n\r\nconst ChartCard: React.FC<Props> = ({\r\n  volume,\r\n}) => {\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && label) {\r\n      return (\r\n        <StyledCard>\r\n          <SpanHeader>{label}</SpanHeader>\r\n          <SpanMain>{`Volume: ${payload[0].payload.volume}`}</SpanMain>\r\n        </StyledCard>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const noChartData = !volume.length\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <SpanHeader>\r\n        Total Volume Since Page Load\r\n      </SpanHeader>\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <AreaChart data={volume} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n          <Area type=\"monotone\" dataKey=\"volume\" stroke='#0098A1' fill=\"#6562a1\" />\r\n          <CartesianGrid stroke='#BDC2C4' strokeDasharray=\"5 5\" opacity=\"0.4\" />\r\n          <XAxis dataKey=\"time\" stroke='#919191' fontSize=\"12px\" />\r\n          <YAxis stroke='#919191' fontSize=\"12px\" />\r\n          <Tooltip content={<CustomTooltip />} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n      {noChartData && (\r\n        <EmptyInfo>\r\n          <SpanHeader >\r\n            No sales yet\r\n          </SpanHeader>\r\n        </EmptyInfo>\r\n      )}\r\n    </ChartContainer>\r\n  )\r\n}\r\n\r\nexport default ChartCard\r\n","import React, { useEffect } from \"react\";\r\nimport { ethers } from \"ethers\"\r\n// import { MarketplaceV2 } from \"@paintswap/marketplace-interactions\"\r\n// import { Sold, NewListing, Unsold, BundlePriceUpdate, DurationExtended, NewBid, NewOffer } from \"@paintswap/marketplace-interactions/dist/lib/marketplaceV2Types\";\r\n// import { MarketplaceV2 } from '../dist/lib'\r\n// import { Sold, NewListing, Unsold, BundlePriceUpdate, DurationExtended, NewBid, NewOffer } from '../dist/lib/marketplaceV2Types'\r\nimport { MarketplaceV2 } from '../lib'\r\nimport { Sold, NewListing, Unsold, BundlePriceUpdate, DurationExtended, NewBid, NewOffer } from '../lib/marketplaceV2Types'\r\nimport styled from 'styled-components'\r\nimport { short, getBalanceNumber, timeConverter } from '../utils/helpers'\r\nimport ChartCard from \"./ChartCard\";\r\n\r\nconst provider = new ethers.providers.JsonRpcProvider(\r\n  \"https://rpc.ftm.tools/\"\r\n)\r\n\r\nconst mainUrl = 'https://paintswap.finance/marketplace/'\r\n\r\ninterface UnsoldExtended extends Unsold {\r\n  cancelled: boolean\r\n}\r\n\r\nconst marketplace = new MarketplaceV2(provider)\r\n\r\nconst breakpoints = {\r\n  xs: 0,\r\n  sm: 600,\r\n  md: 960,\r\n  lg: 1280,\r\n  xl: 1920,\r\n  xxl: 2560,\r\n}\r\n\r\nconst mediaQueries = {\r\n  xs: `@media screen and (min-width: ${breakpoints.xs}px)`,\r\n  sm: `@media screen and (min-width: ${breakpoints.sm}px)`,\r\n  md: `@media screen and (min-width: ${breakpoints.md}px)`,\r\n  lg: `@media screen and (min-width: ${breakpoints.lg}px)`,\r\n  xl: `@media screen and (min-width: ${breakpoints.xl}px)`,\r\n  xxl: `@media screen and (min-width: ${breakpoints.xxl}px)`,\r\n}\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\n// Determines the amount of columns for the stat grid\r\nconst ListContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, minmax(0, 1fr));\r\n  grid-gap: 60px;\r\n  width: 100%;\r\n\r\n  ${mediaQueries.sm} {\r\n    grid-template-columns: repeat(2, minmax(0, 1fr));\r\n  }\r\n\r\n  ${mediaQueries.md} {\r\n    grid-template-columns: repeat(3, minmax(0, 1fr));\r\n  }\r\n\r\n  ${mediaQueries.lg} {\r\n    grid-template-columns: repeat(4, minmax(0, 1fr));\r\n  }\r\n\r\n  ${mediaQueries.xl} {\r\n    grid-template-columns: repeat(5, minmax(0, 1fr));\r\n  }\r\n\r\n  ${mediaQueries.xxl} {\r\n    grid-template-columns: repeat(6, minmax(0, 1fr));\r\n  }\r\n`\r\n\r\nconst FeedContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 16px;\r\n  width: 100%;\r\n  background-color: #131318;\r\n  border-radius: 20px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst Feed = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: visible;\r\n  height: 600px;\r\n`\r\n\r\nconst FeedSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 8px;\r\n  margin-left: 24px;\r\n  margin-right: 24px;\r\n`\r\n\r\nconst SectionRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin-top: 8px;\r\n`\r\n\r\nconst SpanHeader = styled.span`\r\n  margin-top: 16px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`\r\nconst SpanMain = styled.span`\r\n  font-size: 14px;\r\n  color: #7d8fd1;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  margin-top: 16px;\r\n  height: 1px;\r\n  width: 100%;\r\n  background-color: #7d8fd1;\r\n  opacity: 0.3;\r\n`\r\n\r\nconst EventPrinter = () => {\r\n  const [listingFeed, setListingFeed] = React.useState<Array<NewListing>>([])\r\n  const [soldFeed, setSoldFeed] = React.useState<Array<Sold>>([])\r\n  const [unsoldFeed, setUnsoldFeed] = React.useState<Array<UnsoldExtended>>([])\r\n  const [priceUpdateFeed, setPriceUpdateFeed] = React.useState<Array<BundlePriceUpdate>>([])\r\n  const [durationExtendedFeed, setDurationExtendedFeed] = React.useState<Array<DurationExtended>>([])\r\n  const [bidFeed, setBidFeed] = React.useState<Array<NewBid>>([])\r\n  const [offerFeed, setOfferFeed] = React.useState<Array<NewOffer>>([])\r\n\r\n  // For the chart\r\n  const [chartVolumeTotal, setChartVolumeTotal] = React.useState(0)\r\n  const [chartVolume, setChartVolume] = React.useState<Array<any>>([])\r\n\r\n  useEffect(() => {\r\n    console.log(\"Start listening\")\r\n    marketplace.onNewListing((item) => {\r\n      console.log('New listing!\\n', item)\r\n\r\n      const feed: Array<NewListing> = listingFeed || []\r\n      feed.unshift(item)\r\n      setListingFeed([...feed])\r\n    })\r\n  \r\n    marketplace.onSold((item) => {\r\n      console.log('Sold!\\n', item)\r\n\r\n      const feed: Array<Sold> = soldFeed || []\r\n      feed.unshift(item)\r\n      setSoldFeed([...feed])\r\n\r\n      const chartFeed = chartVolume || []\r\n      console.log(chartVolumeTotal + getBalanceNumber(item.priceTotal))\r\n      chartFeed.push({\r\n        time: timeConverter(Date.now() / 1000),\r\n        volume: chartVolumeTotal + getBalanceNumber(item.priceTotal),\r\n      })\r\n      setChartVolumeTotal(chartVolumeTotal + getBalanceNumber(item.priceTotal))\r\n      setChartVolume([...chartFeed])\r\n    })\r\n\r\n    marketplace.onUnsold((item, cancelled) => {\r\n      const feed: Array<UnsoldExtended> = unsoldFeed || []\r\n      \r\n      if (cancelled) {\r\n          console.log('Cancelled sale\\n', item)\r\n          const itemExt: UnsoldExtended = Object.assign({}, item, {cancelled: true});\r\n          feed.unshift(itemExt)\r\n      }\r\n      else {\r\n          console.log('Failed to sell\\n', item)\r\n          const itemExt: UnsoldExtended = Object.assign({}, item, {cancelled: false});\r\n          feed.unshift(itemExt)\r\n      }\r\n      setUnsoldFeed([...feed])\r\n    })\r\n\r\n    marketplace.onPriceUpdate((item) => {\r\n      console.log('Price updated\\n', item)\r\n  \r\n      const feed: Array<BundlePriceUpdate> = priceUpdateFeed || []\r\n      feed.unshift(item)\r\n      setPriceUpdateFeed([...feed])\r\n    })\r\n  \r\n    marketplace.onNewBid((bid) => {\r\n      console.log('New bid\\n', bid)\r\n\r\n      const feed: Array<NewBid> = bidFeed || []\r\n      feed.unshift(bid)\r\n      setBidFeed([...feed])\r\n    })\r\n  \r\n    marketplace.onNewOffer((offer) => {\r\n      console.log('New offer\\n', offer)\r\n\r\n      const feed: Array<NewOffer> = offerFeed || []\r\n      feed.unshift(offer)\r\n      setOfferFeed([...feed])\r\n    })\r\n\r\n    marketplace.onDurationExtended((extension) => {\r\n      console.log('Auction duration extended\\n', extension)\r\n\r\n      const feed: Array<DurationExtended> = durationExtendedFeed || []\r\n      feed.unshift(extension)\r\n      setDurationExtendedFeed([...feed])\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Body>\r\n      <ListContainer>\r\n        {/** LISTINGS */}\r\n        <FeedContainer>\r\n          <p>LISTINGS</p>\r\n          <Feed>\r\n            {listingFeed && listingFeed.map((item: NewListing, index: number) => (\r\n                <FeedSection key={index}>\r\n                  <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\">{item.marketplaceId.toString()}</a></SpanHeader>\r\n                  <SectionRow>\r\n                    <SpanMain>Collection</SpanMain>\r\n                    <SpanMain><a href={`${mainUrl}collections/${item.collection.toLowerCase()}`} target=\"_blank\">{short(item.collection.toLowerCase())}</a></SpanMain>\r\n                  </SectionRow>\r\n                  <SectionRow>\r\n                    <SpanMain>Token ID</SpanMain>\r\n                    <SpanMain><a href={`${mainUrl}assets/${item.collection.toLowerCase()}/${item.tokenID.toString()}`} target=\"_blank\">{item.tokenID.toString()}</a></SpanMain>\r\n                  </SectionRow>\r\n                  <SectionRow>\r\n                    <SpanMain>Type</SpanMain>\r\n                    <SpanMain>{item.isAuction ? 'Auction' : 'Sale'}</SpanMain>\r\n                  </SectionRow>\r\n                  <SectionRow>\r\n                    <SpanMain>Duration</SpanMain>\r\n                    <SpanMain>{`${item.duration.toNumber() / 3600}h`}</SpanMain>\r\n                  </SectionRow>\r\n                  <SectionRow>\r\n                    <SpanMain>Amount</SpanMain>\r\n                    <SpanMain>{item.amount.toString()}</SpanMain>\r\n                  </SectionRow>\r\n                  <SectionRow>\r\n                    <SpanMain>Unit Price</SpanMain>\r\n                    <SpanMain>{getBalanceNumber(item.pricePerUnit)}</SpanMain>\r\n                  </SectionRow>\r\n                  <SectionRow>\r\n                    <SpanMain>Total Price</SpanMain>\r\n                    <SpanMain>{getBalanceNumber(item.priceTotal)}</SpanMain>\r\n                  </SectionRow>\r\n                  <Divider/>\r\n                </FeedSection>\r\n            ))}\r\n            {!listingFeed.length && (\r\n              <SpanHeader>Waiting for events...</SpanHeader>\r\n            )}\r\n          </Feed>\r\n        </FeedContainer>\r\n\r\n        {/** SOLD */}\r\n        <FeedContainer>\r\n        <p>SOLD</p>\r\n          <Feed>\r\n            {soldFeed && soldFeed.map((item: Sold, index: number) => (\r\n              <FeedSection key={index}>\r\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\">{item.marketplaceId.toString()}</a></SpanHeader>\r\n                <SectionRow>\r\n                  <SpanMain>Collection</SpanMain>\r\n                  <SpanMain><a href={`${mainUrl}collections/${item.collection.toLowerCase()}`} target=\"_blank\">{short(item.collection.toLowerCase())}</a></SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Token ID</SpanMain>\r\n                  <SpanMain><a href={`${mainUrl}assets/${item.collection.toLowerCase()}/${item.tokenID.toString()}`} target=\"_blank\">{item.tokenID.toString()}</a></SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Amount</SpanMain>\r\n                  <SpanMain>{item.amount.toString()}</SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Unit Price</SpanMain>\r\n                  <SpanMain>{getBalanceNumber(item.pricePerUnit)}</SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Total Price</SpanMain>\r\n                  <SpanMain>{getBalanceNumber(item.priceTotal)}</SpanMain>\r\n                </SectionRow>\r\n                <Divider/>\r\n              </FeedSection>\r\n            ))}\r\n            {!soldFeed.length && (\r\n              <SpanHeader>Waiting for events...</SpanHeader>\r\n            )}\r\n          </Feed>\r\n        </FeedContainer>\r\n\r\n        {/** UNSOLD */}\r\n        <FeedContainer>\r\n          <p>UNSOLD</p>\r\n          <Feed>\r\n            {unsoldFeed && unsoldFeed.map((item: UnsoldExtended, index: number) => (\r\n              <FeedSection key={index}>\r\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\">{item.marketplaceId.toString()}</a></SpanHeader>\r\n                <SectionRow>\r\n                  <SpanMain>Reason</SpanMain>\r\n                  <SpanMain>{item.cancelled ? 'Cancelled' : 'Expired'}</SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Collection</SpanMain>\r\n                  <SpanMain><a href={`${mainUrl}collections/${item.collection.toLowerCase()}`} target=\"_blank\">{short(item.collection.toLowerCase())}</a></SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Token ID</SpanMain>\r\n                  <SpanMain><a href={`${mainUrl}assets/${item.collection.toLowerCase()}/${item.tokenID.toString()}`} target=\"_blank\">{item.tokenID.toString()}</a></SpanMain>\r\n                </SectionRow>\r\n                <Divider/>\r\n              </FeedSection>\r\n            ))}\r\n            {!unsoldFeed.length && (\r\n              <SpanHeader>Waiting for events...</SpanHeader>\r\n            )}\r\n          </Feed>\r\n        </FeedContainer>\r\n\r\n        {/** PRICE UPDATE */}\r\n        <FeedContainer>\r\n        <p>PRICE UPDATES</p>\r\n          <Feed>\r\n            {priceUpdateFeed && priceUpdateFeed.map((item: BundlePriceUpdate, index: number) => (\r\n              <FeedSection key={index}>\r\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\">{item.marketplaceId.toString()}</a></SpanHeader>\r\n                <SectionRow>\r\n                  <SpanMain>New Price</SpanMain>\r\n                  <SpanMain>{getBalanceNumber(item.price)}</SpanMain>\r\n                </SectionRow>\r\n                <Divider/>\r\n              </FeedSection>\r\n            ))}\r\n            {!priceUpdateFeed.length && (\r\n              <SpanHeader>Waiting for events...</SpanHeader>\r\n            )}\r\n          </Feed>\r\n        </FeedContainer>\r\n\r\n        {/** BIDS */}\r\n        <FeedContainer>\r\n        <p>BIDS</p>\r\n          <Feed>\r\n            {bidFeed && bidFeed.map((item: NewBid, index: number) => (\r\n              <FeedSection key={index}>\r\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\">{item.marketplaceId.toString()}</a></SpanHeader>\r\n                <SectionRow>\r\n                  <SpanMain>Bidder</SpanMain>\r\n                  <SpanMain><a href={`${mainUrl}user/${item.bidder.toLowerCase()}`} target=\"_blank\">{short(item.bidder)}</a></SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Bid</SpanMain>\r\n                  <SpanMain>{getBalanceNumber(item.bid)}</SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Next Minimum</SpanMain>\r\n                  <SpanMain>{getBalanceNumber(item.nextMinimum)}</SpanMain>\r\n                </SectionRow>\r\n                <Divider/>\r\n              </FeedSection>\r\n            ))}\r\n            {!bidFeed.length && (\r\n              <SpanHeader>Waiting for events...</SpanHeader>\r\n            )}\r\n          </Feed>\r\n        </FeedContainer>\r\n\r\n        {/** OFFERS */}\r\n        <FeedContainer>\r\n        <p>OFFERS</p>\r\n          <Feed>\r\n            {offerFeed && offerFeed.map((item: NewOffer, index: number) => (\r\n              <FeedSection key={index}>\r\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\">{item.marketplaceId.toString()}</a></SpanHeader>\r\n                <SectionRow>\r\n                  <SpanMain>Offerer</SpanMain>\r\n                  <SpanMain><a href={`${mainUrl}user/${item.offerrer.toLowerCase()}`} target=\"_blank\">{short(item.offerrer)}</a></SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Offer</SpanMain>\r\n                  <SpanMain>{getBalanceNumber(item.offer)}</SpanMain>\r\n                </SectionRow>\r\n                <SectionRow>\r\n                  <SpanMain>Next Minimum</SpanMain>\r\n                  <SpanMain>{getBalanceNumber(item.nextMinimum)}</SpanMain>\r\n                </SectionRow>\r\n                <Divider/>\r\n              </FeedSection>\r\n            ))}\r\n            {!offerFeed.length && (\r\n              <SpanHeader>Waiting for events...</SpanHeader>\r\n            )}\r\n          </Feed>\r\n        </FeedContainer>\r\n\r\n        {/** AUCTIONS EXTENDED */}\r\n        <FeedContainer>\r\n        <p>AUCTIONS EXTENDED</p>\r\n          <Feed>\r\n            {durationExtendedFeed && durationExtendedFeed.map((item: DurationExtended, index: number) => (\r\n              <FeedSection key={index}>\r\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\">{item.marketplaceId.toString()}</a></SpanHeader>\r\n                <SectionRow>\r\n                  <SpanMain>End Time</SpanMain>\r\n                  <SpanMain>{timeConverter(item.endTime.toNumber())}</SpanMain>\r\n                </SectionRow>\r\n                <Divider/>\r\n              </FeedSection>\r\n            ))}\r\n            {!durationExtendedFeed.length && (\r\n              <SpanHeader>Waiting for events...</SpanHeader>\r\n            )}\r\n          </Feed>\r\n        </FeedContainer>\r\n      </ListContainer>\r\n      <ChartCard volume={chartVolume} />\r\n    </Body>\r\n  )\r\n}\r\n\r\nexport default EventPrinter","import React from 'react'\nimport './App.css';\nimport EventPrinter from './components/EventPrinter';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <a href=\"https://paintswap.finance\" target=\"_blank\"><img src=\"./logo_white.png\" alt=\"logo\" className=\"App-logo\" /></a>\n        <h1>\n          NFT Live Events\n        </h1>\n      </header>\n      <EventPrinter />\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}