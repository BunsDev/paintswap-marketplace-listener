{"version":3,"sources":["utils/helpers.tsx","components/ChartCard.tsx","components/EventPrinter.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["short","input","address","substring","slice","lastFew","getBalanceNumber","amount","decimals","ethers","BigNumber","from","div","pow","toNumber","getBalanceString","utils","formatEther","timeConverter","timestamp","a","Date","getMonth","getDate","getHours","toString","getMinutes","ChartContainer","styled","StyledCard","EmptyInfo","SpanHeader","span","SpanMain","ChartCard","volume","CustomTooltip","active","payload","label","id","price","noChartData","length","ResponsiveContainer","width","height","ComposedChart","data","margin","top","right","bottom","left","CartesianGrid","stroke","strokeDasharray","opacity","XAxis","dataKey","fontSize","YAxis","yAxisId","orientation","Tooltip","content","Legend","Area","type","fill","Line","provider","providers","JsonRpcProvider","mainUrl","marketplace","MarketplaceV2","breakpoints","mediaQueries","xs","sm","md","lg","xl","xxl","Body","ListContainer","ChartArea","FeedContainer","Feed","FeedSection","SectionRow","Divider","EventPrinter","React","useState","init","setInit","listingFeed","setListingFeed","soldFeed","setSoldFeed","unsoldFeed","setUnsoldFeed","priceUpdateFeed","setPriceUpdateFeed","durationExtendedFeed","setDurationExtendedFeed","bidFeed","setBidFeed","offerFeed","setOfferFeed","chartVolume","setChartVolume","useEffect","console","log","onNewListing","item","feed","unshift","onSold","chartFeed","push","time","now","priceTotal","marketplaceId","onUnsold","cancelled","itemExt","Object","assign","onPriceUpdate","onNewBid","bid","onNewOffer","offer","onDurationExtended","extension","map","index","href","target","rel","collection","toLowerCase","tokenID","isAuction","duration","pricePerUnit","bidder","nextMinimum","offerrer","App","className","src","alt","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.131d66c8.chunk.js","sourcesContent":["import { ethers } from \"ethers\"\n\nconst firstFew = (address: string) => {\n  return address.substring(0, 6)\n}\n\nconst lastFew = (address: string) => {\n  return address.slice(-6)\n}\n\nexport const short = (input: string) => {\n  return `${firstFew(input)}...${lastFew(input)}`\n}\n\nexport const getBalanceNumber = (amount: ethers.BigNumber, decimals = 18) => {\n  return ethers.BigNumber.from(amount).div((ethers.BigNumber.from(10)).pow(decimals)).toNumber()\n}\n\nexport const getBalanceString = (amount: ethers.BigNumber) => {\n  return ethers.utils.formatEther(amount)\n}\n\nexport const timeConverter = (timestamp: number) => {\n  const a = new Date(timestamp * 1000)\n  const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n  const month = months[a.getMonth()]\n  const date = a.getDate()\n  const hour = `0${a.getHours().toString()}`.slice(-2)\n  const min = `0${a.getMinutes().toString()}`.slice(-2)\n  return month + ' ' + date + ' - ' + hour + ':' + min\n}","/* eslint-disable camelcase */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Area, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer, ComposedChart, Line, Legend } from 'recharts'\n\nconst ChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #131318;\n  border-radius: 20px;\n  padding: 16px;\n  margin-top: 60px;\n  position: relative;\n`\n\nconst StyledCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 20px;\n  background-color: #161326;\n  border: 1px solid #595da1;\n  color: #7d8fd1;\n  padding: 10px;\n`\n\nconst EmptyInfo = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  z-index: 1000;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n`\n\nconst SpanHeader = styled.span`\n  font-size: 14px;\n  font-weight: bold;\n  margin-bottom: 8px;\n`\nconst SpanMain = styled.span`\n  font-size: 12px;\n  color: #7d8fd1;\n  margin-bottom: 4px;\n`\n\ninterface Props {\n  volume: any\n}\n\nconst ChartCard: React.FC<Props> = ({\n  volume,\n}) => {\n\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && label) {\n      return (\n        <StyledCard>\n          <SpanHeader>{label}</SpanHeader>\n          <SpanMain>{`NFT ID: ${payload[0].payload.id}`}</SpanMain>\n          <SpanMain>{`NFT Price: ${payload[0].payload.price}`}</SpanMain>\n          <SpanMain>{`Tot. Volume: ${payload[0].payload.volume}`}</SpanMain>\n        </StyledCard>\n      )\n    }\n    return null\n  }\n\n  const noChartData = !volume.length\n\n  return (\n    <ChartContainer>\n      <SpanHeader>\n        Volume Sold Since Page Load\n      </SpanHeader>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <ComposedChart data={volume} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n          <CartesianGrid stroke='#BDC2C4' strokeDasharray=\"5 5\" opacity=\"0.4\" />\n          <XAxis dataKey=\"time\" stroke='#919191' fontSize=\"12px\" />\n          <YAxis yAxisId=\"left\" stroke='#919191' fontSize=\"12px\" />\n          <YAxis\n                yAxisId=\"right\"\n                orientation=\"right\"\n                stroke='#919191'\n                fontSize=\"12px\"\n          />\n          <Tooltip content={<CustomTooltip />} />\n          <Legend />\n          <Area dataKey=\"volume\" yAxisId=\"left\" type=\"monotone\" stroke='#0098A1' fill=\"#6562a1\" />\n          <Line dataKey=\"price\" yAxisId=\"right\" type=\"monotone\"  stroke=\"#47CF73\" />\n        </ComposedChart>\n      </ResponsiveContainer>\n      {noChartData && (\n        <EmptyInfo>\n          <SpanHeader >\n            No sales yet\n          </SpanHeader>\n        </EmptyInfo>\n      )}\n    </ChartContainer>\n  )\n}\n\nexport default ChartCard\n","import React, { useEffect } from \"react\";\nimport { ethers } from \"ethers\"\nimport { MarketplaceV2, Sold, NewListing, Unsold, BundlePriceUpdate, DurationExtended, NewBid, NewOffer } from '@paintswap/marketplace-interactions'\nimport styled from 'styled-components'\nimport { short, getBalanceNumber, getBalanceString, timeConverter } from '../utils/helpers'\nimport ChartCard from \"./ChartCard\";\n\nconst provider = new ethers.providers.JsonRpcProvider(\n  \"https://rpc.ftm.tools/\"\n)\n\nconst mainUrl = 'https://paintswap.finance/marketplace/'\n\ninterface UnsoldExtended extends Unsold {\n  cancelled: boolean\n}\n\nconst marketplace = new MarketplaceV2(provider)\n\nconst breakpoints = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n  xxl: 2560,\n}\n\nconst mediaQueries = {\n  xs: `@media screen and (min-width: ${breakpoints.xs}px)`,\n  sm: `@media screen and (min-width: ${breakpoints.sm}px)`,\n  md: `@media screen and (min-width: ${breakpoints.md}px)`,\n  lg: `@media screen and (min-width: ${breakpoints.lg}px)`,\n  xl: `@media screen and (min-width: ${breakpoints.xl}px)`,\n  xxl: `@media screen and (min-width: ${breakpoints.xxl}px)`,\n}\n\nconst Body = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n`\n\n// Determines the amount of columns for the stat grid\nconst ListContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(0, 1fr));\n  grid-gap: 60px;\n  width: 100%;\n\n  ${mediaQueries.sm} {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  ${mediaQueries.md} {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n\n  ${mediaQueries.lg} {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n\n  ${mediaQueries.xl} {\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n  }\n\n  ${mediaQueries.xxl} {\n    grid-template-columns: repeat(6, minmax(0, 1fr));\n  }\n`\n\nconst ChartArea = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(0, 1fr));\n  grid-gap: 60px;\n  width: 100%;\n`\n\nconst FeedContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n  width: 100%;\n  background-color: #131318;\n  border-radius: 20px;\n  padding-bottom: 24px;\n`\n\nconst Feed = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow-x: hidden;\n  overflow-y: visible;\n  max-height: 550px;\n`\n\nconst FeedSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 8px;\n  margin-left: 24px;\n  margin-right: 24px;\n`\n\nconst SectionRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 8px;\n`\n\nconst SpanHeader = styled.span`\n  margin-top: 16px;\n  font-size: 18px;\n  font-weight: bold;\n`\nconst SpanMain = styled.span`\n  font-size: 14px;\n  color: #7d8fd1;\n`\n\nconst Divider = styled.div`\n  margin-top: 16px;\n  height: 1px;\n  width: 100%;\n  background-color: #7d8fd1;\n  opacity: 0.3;\n`\n\nconst EventPrinter = () => {\n  const [init, setInit] = React.useState(false)\n\n  const [listingFeed, setListingFeed] = React.useState<Array<NewListing>>([])\n  const [soldFeed, setSoldFeed] = React.useState<Array<Sold>>([])\n  const [unsoldFeed, setUnsoldFeed] = React.useState<Array<UnsoldExtended>>([])\n  const [priceUpdateFeed, setPriceUpdateFeed] = React.useState<Array<BundlePriceUpdate>>([])\n  const [durationExtendedFeed, setDurationExtendedFeed] = React.useState<Array<DurationExtended>>([])\n  const [bidFeed, setBidFeed] = React.useState<Array<NewBid>>([])\n  const [offerFeed, setOfferFeed] = React.useState<Array<NewOffer>>([])\n\n  // For the chart\n  const [chartVolume, setChartVolume] = React.useState<Array<any>>([])\n\n  useEffect(() => {\n    if (!init) {\n      console.log(\"Start listening\")\n      marketplace.onNewListing((item) => {\n        console.log('New listing!\\n', item)\n\n        const feed: Array<NewListing> = listingFeed || []\n        feed.unshift(item)\n        setListingFeed([...feed])\n      })\n    \n      marketplace.onSold((item) => {\n        console.log('Sold!\\n', item)\n\n        const feed: Array<Sold> = soldFeed || []\n        feed.unshift(item)\n        setSoldFeed([...feed])\n\n        const chartFeed = chartVolume || []\n        chartFeed.push({\n          time: timeConverter(Date.now() / 1000),\n          volume: getBalanceNumber(item.priceTotal) + (chartVolume.length ? chartVolume[chartVolume.length - 1].volume : 0),\n          id: item.marketplaceId.toString(),\n          price: getBalanceNumber(item.priceTotal)\n        })\n        setChartVolume([...chartFeed])\n      })\n\n      marketplace.onUnsold((item, cancelled) => {\n        const feed: Array<UnsoldExtended> = unsoldFeed || []\n        \n        if (cancelled) {\n            console.log('Cancelled sale\\n', item)\n            const itemExt: UnsoldExtended = Object.assign({}, item, {cancelled: true});\n            feed.unshift(itemExt)\n        }\n        else {\n            console.log('Failed to sell\\n', item)\n            const itemExt: UnsoldExtended = Object.assign({}, item, {cancelled: false});\n            feed.unshift(itemExt)\n        }\n        setUnsoldFeed([...feed])\n      })\n\n      marketplace.onPriceUpdate((item) => {\n        console.log('Price updated\\n', item)\n    \n        const feed: Array<BundlePriceUpdate> = priceUpdateFeed || []\n        feed.unshift(item)\n        setPriceUpdateFeed([...feed])\n      })\n    \n      marketplace.onNewBid((bid) => {\n        console.log('New bid\\n', bid)\n\n        const feed: Array<NewBid> = bidFeed || []\n        feed.unshift(bid)\n        setBidFeed([...feed])\n      })\n    \n      marketplace.onNewOffer((offer) => {\n        console.log('New offer\\n', offer)\n\n        const feed: Array<NewOffer> = offerFeed || []\n        feed.unshift(offer)\n        setOfferFeed([...feed])\n      })\n\n      marketplace.onDurationExtended((extension) => {\n        console.log('Auction duration extended\\n', extension)\n\n        const feed: Array<DurationExtended> = durationExtendedFeed || []\n        feed.unshift(extension)\n        setDurationExtendedFeed([...feed])\n      })\n    }\n    setInit(true)\n  }, [init, listingFeed, soldFeed, unsoldFeed, priceUpdateFeed, durationExtendedFeed, bidFeed, offerFeed, chartVolume])\n\n  return (\n    <Body>\n      <ListContainer>\n        {/** LISTINGS */}\n        <FeedContainer>\n          <p>LISTINGS</p>\n          <Feed>\n            {listingFeed && listingFeed.map((item: NewListing, index: number) => (\n                <FeedSection key={index}>\n                  <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.marketplaceId.toString()}</a></SpanHeader>\n                  <SectionRow>\n                    <SpanMain>Collection</SpanMain>\n                    <SpanMain><a href={`${mainUrl}collections/${item.collection.toLowerCase()}`} target=\"_blank\" rel=\"noreferrer\">{short(item.collection.toLowerCase())}</a></SpanMain>\n                  </SectionRow>\n                  <SectionRow>\n                    <SpanMain>Token ID</SpanMain>\n                    <SpanMain><a href={`${mainUrl}assets/${item.collection.toLowerCase()}/${item.tokenID.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.tokenID.toString()}</a></SpanMain>\n                  </SectionRow>\n                  <SectionRow>\n                    <SpanMain>Type</SpanMain>\n                    <SpanMain>{item.isAuction ? 'Auction' : 'Sale'}</SpanMain>\n                  </SectionRow>\n                  <SectionRow>\n                    <SpanMain>Duration</SpanMain>\n                    <SpanMain>{`${item.duration.toNumber() / 3600}h`}</SpanMain>\n                  </SectionRow>\n                  {item.amount.toNumber() > 1 && (\n                  <>\n                    <SectionRow>\n                      <SpanMain>Amount</SpanMain>\n                      <SpanMain>{item.amount.toString()}</SpanMain>\n                    </SectionRow>\n                    <SectionRow>\n                      <SpanMain>Unit Price</SpanMain>\n                      <SpanMain>{getBalanceString(item.pricePerUnit)}</SpanMain>\n                    </SectionRow>\n                  </>\n                  )}\n                  <SectionRow>\n                    <SpanMain>{`${item.amount.toNumber() > 1 ? 'Total Price' : 'Price'}`}</SpanMain>\n                    <SpanMain>{getBalanceString(item.priceTotal)}</SpanMain>\n                  </SectionRow>\n                  <Divider/>\n                </FeedSection>\n            ))}\n            {!listingFeed.length && (\n              <SpanHeader>Waiting for events...</SpanHeader>\n            )}\n          </Feed>\n        </FeedContainer>\n\n        {/** SOLD */}\n        <FeedContainer>\n        <p>SOLD</p>\n          <Feed>\n            {soldFeed && soldFeed.map((item: Sold, index: number) => (\n              <FeedSection key={index}>\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.marketplaceId.toString()}</a></SpanHeader>\n                <SectionRow>\n                  <SpanMain>Collection</SpanMain>\n                  <SpanMain><a href={`${mainUrl}collections/${item.collection.toLowerCase()}`} target=\"_blank\" rel=\"noreferrer\">{short(item.collection.toLowerCase())}</a></SpanMain>\n                </SectionRow>\n                <SectionRow>\n                  <SpanMain>Token ID</SpanMain>\n                  <SpanMain><a href={`${mainUrl}assets/${item.collection.toLowerCase()}/${item.tokenID.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.tokenID.toString()}</a></SpanMain>\n                </SectionRow>\n                {item.amount.toNumber() > 1 && (\n                  <>\n                    <SectionRow>\n                      <SpanMain>Amount</SpanMain>\n                      <SpanMain>{item.amount.toString()}</SpanMain>\n                    </SectionRow>\n                    <SectionRow>\n                      <SpanMain>Unit Price</SpanMain>\n                      <SpanMain>{getBalanceString(item.pricePerUnit)}</SpanMain>\n                    </SectionRow>\n                  </>\n                )}\n                <SectionRow>\n                  <SpanMain>{`${item.amount.toNumber() > 1 ? 'Total Price' : 'Price'}`}</SpanMain>\n                  <SpanMain>{getBalanceString(item.priceTotal)}</SpanMain>\n                </SectionRow>\n                <Divider/>\n              </FeedSection>\n            ))}\n            {!soldFeed.length && (\n              <SpanHeader>Waiting for events...</SpanHeader>\n            )}\n          </Feed>\n        </FeedContainer>\n\n        {/** UNSOLD */}\n        <FeedContainer>\n          <p>UNSOLD</p>\n          <Feed>\n            {unsoldFeed && unsoldFeed.map((item: UnsoldExtended, index: number) => (\n              <FeedSection key={index}>\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.marketplaceId.toString()}</a></SpanHeader>\n                <SectionRow>\n                  <SpanMain>Reason</SpanMain>\n                  <SpanMain>{item.cancelled ? 'Cancelled' : 'Expired'}</SpanMain>\n                </SectionRow>\n                <SectionRow>\n                  <SpanMain>Collection</SpanMain>\n                  <SpanMain><a href={`${mainUrl}collections/${item.collection.toLowerCase()}`} target=\"_blank\" rel=\"noreferrer\">{short(item.collection.toLowerCase())}</a></SpanMain>\n                </SectionRow>\n                <SectionRow>\n                  <SpanMain>Token ID</SpanMain>\n                  <SpanMain><a href={`${mainUrl}assets/${item.collection.toLowerCase()}/${item.tokenID.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.tokenID.toString()}</a></SpanMain>\n                </SectionRow>\n                <Divider/>\n              </FeedSection>\n            ))}\n            {!unsoldFeed.length && (\n              <SpanHeader>Waiting for events...</SpanHeader>\n            )}\n          </Feed>\n        </FeedContainer>\n\n        {/** PRICE UPDATE */}\n        <FeedContainer>\n        <p>PRICE UPDATES</p>\n          <Feed>\n            {priceUpdateFeed && priceUpdateFeed.map((item: BundlePriceUpdate, index: number) => (\n              <FeedSection key={index}>\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.marketplaceId.toString()}</a></SpanHeader>\n                <SectionRow>\n                  <SpanMain>New Price</SpanMain>\n                  <SpanMain>{getBalanceString(item.price)}</SpanMain>\n                </SectionRow>\n                <Divider/>\n              </FeedSection>\n            ))}\n            {!priceUpdateFeed.length && (\n              <SpanHeader>Waiting for events...</SpanHeader>\n            )}\n          </Feed>\n        </FeedContainer>\n\n        {/** BIDS */}\n        <FeedContainer>\n        <p>BIDS</p>\n          <Feed>\n            {bidFeed && bidFeed.map((item: NewBid, index: number) => (\n              <FeedSection key={index}>\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.marketplaceId.toString()}</a></SpanHeader>\n                <SectionRow>\n                  <SpanMain>Bidder</SpanMain>\n                  <SpanMain><a href={`${mainUrl}user/${item.bidder.toLowerCase()}`} target=\"_blank\" rel=\"noreferrer\">{short(item.bidder)}</a></SpanMain>\n                </SectionRow>\n                <SectionRow>\n                  <SpanMain>Bid</SpanMain>\n                  <SpanMain>{getBalanceString(item.bid)}</SpanMain>\n                </SectionRow>\n                <SectionRow>\n                  <SpanMain>Next Minimum</SpanMain>\n                  <SpanMain>{getBalanceString(item.nextMinimum)}</SpanMain>\n                </SectionRow>\n                <Divider/>\n              </FeedSection>\n            ))}\n            {!bidFeed.length && (\n              <SpanHeader>Waiting for events...</SpanHeader>\n            )}\n          </Feed>\n        </FeedContainer>\n\n        {/** OFFERS */}\n        <FeedContainer>\n        <p>OFFERS</p>\n          <Feed>\n            {offerFeed && offerFeed.map((item: NewOffer, index: number) => (\n              <FeedSection key={index}>\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.marketplaceId.toString()}</a></SpanHeader>\n                <SectionRow>\n                  <SpanMain>Offerer</SpanMain>\n                  <SpanMain><a href={`${mainUrl}user/${item.offerrer.toLowerCase()}`} target=\"_blank\" rel=\"noreferrer\">{short(item.offerrer)}</a></SpanMain>\n                </SectionRow>\n                <SectionRow>\n                  <SpanMain>Offer</SpanMain>\n                  <SpanMain>{getBalanceString(item.offer)}</SpanMain>\n                </SectionRow>\n                <SectionRow>\n                  <SpanMain>Next Minimum</SpanMain>\n                  <SpanMain>{getBalanceString(item.nextMinimum)}</SpanMain>\n                </SectionRow>\n                <Divider/>\n              </FeedSection>\n            ))}\n            {!offerFeed.length && (\n              <SpanHeader>Waiting for events...</SpanHeader>\n            )}\n          </Feed>\n        </FeedContainer>\n\n        {/** AUCTIONS EXTENDED - Hidden for now due to low activity*/}\n        {/** \n        <FeedContainer>\n        <p>AUCTIONS EXTENDED</p>\n          <Feed>\n            {durationExtendedFeed && durationExtendedFeed.map((item: DurationExtended, index: number) => (\n              <FeedSection key={index}>\n                <SpanHeader>ID: <a href={`${mainUrl}${item.marketplaceId.toString()}`} target=\"_blank\" rel=\"noreferrer\">{item.marketplaceId.toString()}</a></SpanHeader>\n                <SectionRow>\n                  <SpanMain>End Time</SpanMain>\n                  <SpanMain>{timeConverter(item.endTime.toNumber())}</SpanMain>\n                </SectionRow>\n                <Divider/>\n              </FeedSection>\n            ))}\n            {!durationExtendedFeed.length && (\n              <SpanHeader>Waiting for events...</SpanHeader>\n            )}\n          </Feed>\n        </FeedContainer>\n        */}\n      </ListContainer>\n      <ChartArea>\n        <ChartCard volume={chartVolume} />\n      </ChartArea>\n    </Body>\n  )\n}\n\nexport default EventPrinter\n","import React from 'react'\nimport './App.css';\nimport EventPrinter from './components/EventPrinter';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <a href=\"https://paintswap.finance\" target=\"_blank\" rel=\"noreferrer\"><img src=\"./logo_white.png\" alt=\"logo\" className=\"App-logo\" /></a>\n        <h1>\n          NFT Live Events\n        </h1>\n      </header>\n      <EventPrinter />\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}